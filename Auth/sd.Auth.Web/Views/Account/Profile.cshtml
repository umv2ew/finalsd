@model sd.Auth.Web.Models.StatisticsViewModel

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<style>

  body{
    background-color:#fcdaf7;
    font-family: "Poppins", sans-serif;
    font-weight: 300;
  }

  .container{
    height: 100vh;
  }

  .card{
    width: 480px;
    border: none;
    border-radius: 15px;
    padding: 8px;
    background-color: #fff;
    position: relative;
    height: 420px;
  }

  .upper{
    height: 100px;
  }

  .upper img{
    width: 100%;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;

  }

  .newgame-btn {
    cursor: pointer;
    width: 20%;
    border: none;
    border-radius: 0.5em;
    background-color: #f7a1eb;
    color: white;
    font-weight: 400;
  }

  .newgame-btn:hover {
    background-color:  #fcdaf7;
  }

  .stats span{
    font-size: 29px;
  }
       
</style>

<div class="container d-flex justify-content-center align-items-center">
  <div class="card">

    <div class="upper">
      <img src="/images/FooterImage.jpg" class="img-fluid">
    </div>

    <div class="mt-5 text-center">
      <h4 class="mb-0">@Html.DisplayFor(model => model.PlayerName)</h4>
      <p></p>
      <button class="btn btn-primary btn-sm newgame-btn" onclick="location.href='@Url.Action("StartGame", "Game")'" ">Play Game</button>

      <div class="d-flex justify-content-between align-items-center mt-4 px-4">

        <div class="stats">
          <h6 class="mb-0">Played games</h6>
          <span>@Html.DisplayFor(model => model.PlayedGames)</span>
        </div>

        <div class="stats">
          <h6 class="mb-0">Number of wins</h6>
          <span>@Html.DisplayFor(model => model.NumberOfWins)</span>
        </div>


        <div class="stats">
          <h6 class="mb-0">Points</h6>
          <span>@Html.DisplayFor(model => model.Points)</span>
        </div>

      </div>
    </div>
  </div>
</div>